@model Order

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<form method="post">
    <div class="border-5 p-3 mt-4">
        <div class="row pb-2 ">
            <h2 class="text-primary text-center">Create Order</h2>
            <input type="hidden" name="ClientId" value="@Model.ClientId" />
            <hr />
        </div>

        @if (Model.Addersses.Count == 0)
        {
            <div class="alert alert-warning text-center mt-4" role="alert">
                Address not found. Please add address.
            </div>
            <div class="row mt-4">
                <div class="col-6 col-md-3">
                    <a asp-controller="Client" asp-action="Index" class="btn btn-outline-primary border-1 form-control">Back</a>
                </div>
            </div>
        }
        else
        {
            <div class="mb-3 row p-2">
                <label class="p-0">Addersses</label>
                <select name="AddressId" required class="form-control">
                    <option value="" disabled selected hidden>Select an address</option>
                    @foreach (var obj in Model.Addersses)
                    {
                        <option value="@obj.Id">@obj.Address</option>
                    }
                </select>
            </div>

            <div class="container">
                <table class="table-bordered w-100">
                    
                    <tbody id="itemTableBody">
                        
                    </tbody>
                </table>

                <div class="row mt-6 flex-nowrap justify-content-between">
                     <div class="col-auto m-4">
                         <button type="button" class="btn btn-outline-primary form-control" id="addItemBtn">Add Item</button>
                     </div>

                     <div class="col-auto d-flex align-items-center">
                         <label ><strong>Order Total:</strong></label>
                         <input type="text" name="OrderTotal" id="orderTotalDisplay" class="form-control-plaintext " value="0.00" readonly />
                     </div>

                      
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-6 col-md-3">
                    <button type="submit" class="btn btn-primary form-control">Add</button>
                </div>
                <div class="col-6 col-md-3">
                    <a asp-controller="Client" asp-action="Order" asp-route-id=@Model.ClientId class="btn btn-outline-primary border-1 form-control">Back</a>
                </div>
            </div>
        }
    </div>
</form>

<script>
   
    const productPrices = {
        @foreach (var product in Model.Products)
        {
            <text>'@product.Id': @product.Rate,</text>
        }
    };

    
    const productOptions = `
        <option value="" disabled selected hidden>Select a product</option>
        @foreach (var obj in Model.Products)
        {
            <text><option value="@obj.Id">@obj.Name</option></text>
        }
    `;

    let rowIndex = 0;

   
    $('#addItemBtn').click(function () {
        const newRow = `
            <tr>
                <td>
                    <select class="form-control product-select" name="items[${rowIndex}].ProductId" required >
                        ${productOptions}
                    </select>
                </td>
                <td>
                    <input type="number" step="0.01" name="items[${rowIndex}].Rate" class="form-control price" placeholder="Price" />
                </td>
                <td>
                    <input type="number" name="items[${rowIndex}].Quantity" class="form-control quantity" min="1" placeholder="Quantity" required />
                </td>
                <td>
                    <input type="text" name="items[${rowIndex}].ItemTotal" class="form-control total" placeholder="Total" readonly />
                </td>
                <td>
                    <button type="button" class="btn btn-danger removeItem">X</button>
                </td>
            </tr>`;
        $('#itemTableBody').append(newRow);
        rowIndex++;
    });

    
    $(document).on('change', '.product-select', function () {
        const selectedProductId = $(this).val();
        const priceInput = $(this).closest('tr').find('.price');

        if (selectedProductId && productPrices[selectedProductId] !== undefined) {
            priceInput.val(productPrices[selectedProductId].toFixed(2));
        } else {
            priceInput.val('');
        }

        calculateRowTotal($(this).closest('tr'));
    });

   
    $(document).on('click', '.removeItem', function () {
        $(this).closest('tr').remove();
        reindexRows();
        calculateAllTotals();
    });

 
    function reindexRows() {
        $('#itemTableBody tr').each(function (i, row) {
            $(row).find('input, select').each(function () {
                const name = $(this).attr('name');
                if (name) {
                    const newName = name.replace(/Item\[\d+\]/, `Item[${i}]`);
                    $(this).attr('name', newName);
                }
            });
        });
        rowIndex = $('#itemTableBody tr').length;
    }

  
    function calculateRowTotal(row) {
        const price = parseFloat($(row).find('.price').val()) || 0;
        const quantity = parseInt($(row).find('.quantity').val()) || 0;
        const total = price * quantity;
        $(row).find('.total').val(total.toFixed(2));

        updateOrderTotal();
    }

    
    function calculateAllTotals() {
        $('#itemTableBody tr').each(function () {
            calculateRowTotal(this);
        });
        updateOrderTotal();
    }

    
    function updateOrderTotal() {
        let sum = 0;
        $('#itemTableBody tr').each(function () {
            const totalVal = parseFloat($(this).find('.total').val()) || 0;
            sum += totalVal;
        });
        $('#orderTotalDisplay').val(sum.toFixed(2));
        $('#OrderTotal').val(sum.toFixed(2));
    }

    
    $(document).on('input', '.quantity', function () {
        const row = $(this).closest('tr');
        calculateRowTotal(row);
    });

</script>

